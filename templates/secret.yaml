apiVersion: v1
kind: Secret
metadata:
  name: {{ include "n8n.fullname" . }}-secret
  labels:
    {{- include "n8n.labels" . | nindent 4 }}
type: Opaque
data:
  {{- if .Values.n8n.encryption_key }}
  encryption-key: {{ .Values.n8n.encryption_key | b64enc | quote }}
  {{- else }}
  {{- $existingSecret := lookup "v1" "Secret" .Release.Namespace (printf "%s-secret" (include "n8n.fullname" .)) }}
  {{- if $existingSecret }}
  # Preserve existing encryption key during upgrades
  encryption-key: {{ index $existingSecret.data "encryption-key" | quote }}
  {{- else }}
  # Generate a secure random 32-character encryption key for new installs
  encryption-key: {{ randAlphaNum 32 | b64enc | quote }}
  {{- end }}
  {{- end }}