name: Helm Chart Tests

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main]

jobs:
  lint-and-test:
    runs-on: ubuntu-latest
    name: Lint and Test Helm Chart

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Helm
        uses: azure/setup-helm@v4
        with:
          version: v3.14.0

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: 3.9

      - name: Install chart-testing
        uses: helm/chart-testing-action@v2.6.1

      - name: Install helm-unittest
        run: |
          helm plugin install https://github.com/helm-unittest/helm-unittest.git

      - name: Run chart-testing (list changed)
        id: list-changed
        run: |
          changed=$(ct list-changed --config .github/ct.yaml)
          if [[ -n "$changed" ]]; then
            echo "changed=true" >> "$GITHUB_OUTPUT"
          fi

      - name: Lint Helm Chart
        run: |
          helm lint .

      - name: Run Helm Unit Tests
        run: |
          helm unittest --color --output-type junit --output-file test-results.xml .

      - name: Publish Test Results
        uses: EnricoMi/publish-unit-test-result-action@v2
        if: always()
        with:
          files: test-results.xml
          check_name: 'Helm Unit Test Results'

      - name: Run chart-testing (lint)
        if: steps.list-changed.outputs.changed == 'true'
        run: ct lint --config .github/ct.yaml

      - name: Create kind cluster
        if: steps.list-changed.outputs.changed == 'true'
        uses: helm/kind-action@v1.10.0

      - name: Add PostgreSQL and Redis Helm repositories
        if: steps.list-changed.outputs.changed == 'true'
        run: |
          helm repo add bitnami https://charts.bitnami.com/bitnami
          helm repo update

      - name: Run chart-testing (install)
        if: steps.list-changed.outputs.changed == 'true'
        run: ct install --config .github/ct.yaml

  docker-test:
    runs-on: ubuntu-latest
    name: Test with Docker

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Run helm-unittest with Docker
        run: |
          docker run -ti --rm -v $(pwd):/apps \
            helmunittest/helm-unittest:latest \
            --color --output-type junit --output-file test-results-docker.xml .

      - name: Upload Docker Test Results
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: docker-test-results
          path: test-results-docker.xml

  security-scan:
    runs-on: ubuntu-latest
    name: Security Scan

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Run Trivy vulnerability scanner
        uses: aquasecurity/trivy-action@master
        with:
          scan-type: 'fs'
          scan-ref: '.'
          format: 'sarif'
          output: 'trivy-results.sarif'

      - name: Upload Trivy scan results to GitHub Security tab
        uses: github/codeql-action/upload-sarif@v3
        if: always()
        with:
          sarif_file: 'trivy-results.sarif'
